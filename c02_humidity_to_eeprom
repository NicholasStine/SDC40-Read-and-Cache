#include <SensirionI2CScd4x.h>
#include <avr/sfr_defs.h>
#include <Arduino.h>
#include <EEPROM.h>
#include <Wire.h>
#include <math.h>

//#include <SoftWire.h>
//#include <AsyncDelay.h>
//SoftWire i2c(sdaPin, sclPin);

uint8_t sdaPin = 20;
uint8_t sclPin = 21;

SensirionI2CScd4x scd4x;

void setup() {
  Serial.begin(1200);
  Wire.begin();
  scd4x.begin(Wire);

  //  i2c.begin();
  //  i2c.setTimeout_ms(200);

  uint16_t error;
  error = scd4x.startPeriodicMeasurement();
  Serial.println("CO2, Humidity");
}

int current_eeprom_addy = 0;

void printReading(int co2, double humidity) {
  Serial.println(String(co2) + "," + String(int(humidity)));
//  Serial.println("\n(" + String(current_eeprom_addy) + ")\nCO2:\t\t" + String(co2) + "ppm\nHumidity:\t" + String(int(humidity)) + "%");
}

void compressReadings(double co2, int humidity) {
  double co2_clamped = max(100, min(500, co2)) - 100;   // clamp co2 from 100 to 500, and subtract 100 to start from 0
  int co2_4bit = int(co2_clamped / 25);                 // Round the co2 to the nearest 25 (500-100 / 16, or 4 bits)
  int hum_4bit = int(humidity / 6.25) * 16;             // Round humidity to the nearest 6.25, then nearest int (100 degrees / 16)
                                                        // Humidity is * 16 because it needs to fill bit positions 5-8, and bit 5 is 16 in binary
  byte compressed_byte = co2_4bit + hum_4bit;
  EEPROM.write(current_eeprom_addy, compressed_byte);
}

void saveReadingsToEeprom(double co2, int humidity) {
  if (current_eeprom_addy <= E2END) {
    printReading(co2, humidity);
    compressReadings(co2, humidity);
    current_eeprom_addy = current_eeprom_addy + 1;
  } 
  else if (current_eeprom_addy == E2END + 1) {
    current_eeprom_addy = current_eeprom_addy + 1;
  }
}

void loop() {
	return;
  uint16_t co2;
  float temperature;
  float humidity;
//  uint16_t co2 = random(180, 440);
//  float temperature;
//  float humidity = random(0, 100);

  uint16_t error;

    error = scd4x.readMeasurement(co2, temperature, humidity);
    if (error) {
        Serial.print("Error trying to execute readMeasurement(): ");
        Serial.println("Error");
    } else if (co2 == 0) {
        Serial.println("Invalid sample detected, skipping.");
    } else {
        saveReadingsToEeprom(co2, humidity);
    }
  
    delay(10000);
}
